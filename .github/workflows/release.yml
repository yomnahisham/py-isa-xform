name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper versioning
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools
        pip install -r requirements.txt
        pip install -e .
        
    - name: Verify version consistency
      run: |
        echo "Checking version consistency..."
        TAG_VERSION="${GITHUB_REF#refs/tags/v}"
        PYTHON_VERSION=$(python -c "from isa_xform import __version__; print(__version__)")
        SETUP_VERSION=$(python -c "import re; content=open('setup.py').read(); match=re.search(r'version=\"([^\"]+)\"', content); print(match.group(1))")
        echo "Python version: $PYTHON_VERSION"
        echo "Setup.py version: $SETUP_VERSION"
        echo "Tag version: $TAG_VERSION"
        if [ "$PYTHON_VERSION" != "$SETUP_VERSION" ] || [ "$PYTHON_VERSION" != "$TAG_VERSION" ]; then
          echo "❌ Version mismatch detected!"
          exit 1
        fi
        echo "✅ Version consistency verified"
        
    - name: Verify package structure
      run: |
        echo "Verifying package structure..."
        python -c "import isa_xform; print('✅ isa_xform imported successfully')"
        python -c "from isa_xform.core.isa_loader import ISALoader; print('✅ ISALoader imported successfully')"
        
    - name: Build package
      run: |
        python -m build
        
    - name: Verify build artifacts
      run: |
        echo "Checking build artifacts..."
        TAG_VERSION="${GITHUB_REF#refs/tags/v}"
        ls -la dist/
        if [ ! -f "dist/py_isa_xform-$TAG_VERSION-py3-none-any.whl" ]; then
          echo "❌ Wheel file not found!"
          exit 1
        fi
        if [ ! -f "dist/py_isa_xform-$TAG_VERSION.tar.gz" ]; then
          echo "❌ Source distribution not found!"
          exit 1
        fi
        echo "✅ Build artifacts verified"
        
    - name: Test installation
      run: |
        echo "Testing wheel installation..."
        TAG_VERSION="${GITHUB_REF#refs/tags/v}"
        pip install dist/py_isa_xform-$TAG_VERSION-py3-none-any.whl --force-reinstall
        python -c "import isa_xform; print(f'Installed version: {isa_xform.__version__}')"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}